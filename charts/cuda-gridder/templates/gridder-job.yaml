{{- if .Values.gridder.enabled -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: gridder-{{ template "cuda-gridder.name" . }}-{{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: gridder-{{ template "cuda-gridder.name" . }}
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: "{{ .Release.Service }}"
    helm.sh/chart: "{{ template "cuda-gridder.chart" . }}"

spec:
  backoffLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: gridder-{{ template "cuda-gridder.name" . }}
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/managed-by: "{{ .Release.Service }}"
        helm.sh/chart: "{{ template "cuda-gridder.chart" . }}"
    spec:
      runtimeClassName: nvidia
      volumes:
        - hostPath:
            path: {{ tpl .Values.gridder.testData . }}
            type: DirectoryOrCreate
          name: testdata
      restartPolicy: Never
      containers:
      - name: gridder
        image: "{{ .Values.gridder.image.registry }}/{{ .Values.gridder.image.image }}:{{ .Values.gridder.image.tag }}"
        imagePullPolicy: {{ .Values.gridder.image.pullPolicy }}
        command: ["gridder"]
        volumeMounts:
          - mountPath: /gridder_test_data
            readOnly: false
            name: testdata
        resources:
{{ toYaml .Values.gridder.resources | indent 10 }}
{{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
{{- end }}
{{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end -}}
